name: Snapshot Pipeline
  
on:
  push:
    branches:
      - master

jobs:
  update_release_draft:
    name: Create/Update Release Draft
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.bash_v.outputs.version}}
    steps:
      - name: Draft Release Notes
        id: release-drafter
        uses: release-drafter/release-drafter@v5.11.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: bash_v
        run: |
          version=${calculated_v//v}
          echo "::set-output name=version::${version}"
        env:
          calculated_v: ${{steps.release-drafter.outputs.tag_name}}
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: update_release_draft
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache
        uses: actions/cache@v1.1.2
        with:
          # A directory to store and save the cache
          path: ~/.m2
          key: m2
      - name: Run Unit Tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: mvn -B org.jacoco:jacoco-maven-plugin:prepare-agent test org.jacoco:jacoco-maven-plugin:report --file test_pom.xml
      - name: Publish Unit Test Results Report
        uses: scacap/action-surefire-report@v1
        if: ${{ always() }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Results
      - name: Upload Test Result Logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: Logs
          path: ./**/logs
  generate:
    runs-on: ubuntu-latest
    name: Generate Archetype
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.m2
          key: m2
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: Arch-Pom
          path: arch_pom.xml
      - name: Clean Up file script
        run: ./cleanup.sh
      - name: Remove file scripts
        run: rm cleanup.sh
      - name: Build with Maven
        run: mvn -B archetype:create-from-project -e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: Archetype
          path: target/generated-sources/archetype
  modify:
    runs-on: ubuntu-latest
    name: Modify Archetype
    needs: [ generate ]
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.m2
          key: m2
      - name: Download Archetype
        uses: actions/download-artifact@v1.0.0
        with:
          name: Archetype
      - name: Download Arch-Pom
        uses: actions/download-artifact@v1.0.0
        with:
          name: Arch-Pom
      - name: File adjustment operations
        run: |
          rm ${{github.workspace}}/Archetype/pom.xml
          mv ${{github.workspace}}/Arch-Pom/arch_pom.xml ${{github.workspace}}/Archetype/pom.xml
          find . -type d -name "drivers" -exec rm -rf {} +
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: Archetype-Modified
          path: ${{github.workspace}}/Archetype
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Archetype Snapshot
    needs: [ modify, update_release_draft ]
    env:
      VERSION: ${{needs.update_release_draft.outputs.version}}
    strategy:
      matrix:
        #repo: [github, ossrh]
        repo: [ ossrh ]
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Create settings file
        uses: InstaCode/maven-settings-xml-action@v9
        with:
          servers: '[{"id": "ossrh", "username": "jason-edstrom", "password": "${{secrets.OSSRH_PACKAGES}}"},{"id": "github", "username": "jason-edstrom", "password": "${{secrets.PACKAGES}}"}]'
      - name: Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2
      - name: Download Archetype
        uses: actions/download-artifact@v1.0.0
        with:
          name: Archetype-Modified
      - uses: altinukshini/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: https://oss.sonatype.org/#nexus-search;quick~JMAQS
          environment: SnapShot - ${{matrix.repo}}
      - name: Deploy SnapShot Packages to '${{matrix.repo}}' Repository
        run: mvn -Drevision="${{env.VERSION}}-SNAPSHOT" -Ddeploy=${{matrix.repo}} deploy -B -e -f Archetype-Modified/pom.xml
      - name: Update deployment status (success)
        if: success()
        uses: altinukshini/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://oss.sonatype.org/#nexus-search;quick~JMAQS
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: altinukshini/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://oss.sonatype.org/#nexus-search;quick~JMAQS
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
